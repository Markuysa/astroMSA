syntax = "proto3";

package protobuf;
option go_package = "/gen";
import "google/api/annotations.proto";
import "google/type/date.proto";

// Required types
message Receiver{
  string zodiac = 1;
  string email  = 2;
}
// Message sender service
service MessageService{
  rpc SendDailyPredictions(DailyPredictionsRequest) returns (DailyPredictionsResponse){
    option (google.api.http) = {
      post: "/api/v1/sendPredictions";
    };
  }
}
message DailyPredictionsResponse{
  bool responseStatus = 1;
}
message DailyPredictionsRequest{
  string day = 1;
  repeated Receiver receivers = 2;
}

// Users authentication service
service AuthService{
  rpc GetUser(GetUserRequest) returns (GetUserResponse){
    option (google.api.http).get = "/api/v1/users/get";
  };
  rpc AddUser(AddUserRequest) returns (AddUserResponse){
    option (google.api.http) = {
      post: "/api/v1/users/add";
      body: "*";
    };
  };
  rpc GetUsersWithAllowedNotifications(NotificationsRequest) returns (NotificationResponse){
      option (google.api.http).get = "/api/v1/users/getNotifications";
  };
  rpc LoginUser(LoginUserRequest) returns (LoginUserResponse){
    option (google.api.http).post = "/api/v1/users/login";
  }
}
message NotificationsRequest{

}
message LoginUserResponse{
  bool status = 1;
}
message NotificationResponse{
  repeated Receiver receivers = 1;
}
message GetUserRequest{
  string email = 1;
}
message GetUserResponse{
  User user = 1;
}
message LoginUserRequest{
  string email=1;
  string password=2;
}
message AddUserRequest{
  string email = 1;
  string name = 2;
  string password = 3;
  bool notifications=4;
  google.type.Date birthInfo = 5;
}
message AddUserResponse{
  bool status = 1;
}
message User{
  string email = 1;
  string sign = 2;
  string name = 3;
  string password = 4;
  uint64 iD = 5;
  bool  notifications=6;
  google.type.Date BirthInfo = 7;
}

// AstroService
service AstrologyService{
  rpc GetPrediction(PredictionRequest) returns (PredictionResponse){
    option (google.api.http).get = "/api/v1/astro/getPrediction";
  }
  rpc SendPredictions(SendPredictionsRequest)returns (SendPredictionsResponse){
    option (google.api.http).post = "/api/v1/astro/sendPredictions";
  }
}
message SendPredictionsRequest{
}
message SendPredictionsResponse{
  bool Status = 1;
}
message PredictionRequest{
  string Sign = 1;
  string Day  = 2;
}
message PredictionResponse{
  string dateRange     = 1;
  string currentDate   = 2;
  string description   = 3;
  string compatibility = 4;
  string mood          = 5;
  string color         = 6;
  string luckyNumber   = 7;
  string luckyTime     = 8;
}